- Node is my server, I start that up when I need to expose the API for front-end use
	- Like how I have PHP running as a service on my machine
- Webpack/Ionic/Angular is my front-end, I will start my webpack build process when I need to focus on front-end tasks

- You can have a route to http://myapp.com/projects/ that serves as my API JSON endpoint
- Then I can define an Ionic route to http://myapp.com/projects/ to display templates

---

- React is working IN the browser, taking JS from a main build file and building DOM components for the UI

- React, and React DOM, need to be included as resources on the page itself
- JSX can be run as a webpack plugin to turn JSX into JavaScript that the browser can understand
- My react compontents get included in the final public JS build, NOT as part of my node application

- I need to start creating my Webpack build process, where React will be included as a dependency for my individiaul react compontents

- I'm still struggling to understand how exactly react and react components fit into my app though. Am I just making ajax calls to get JSON and then feeding it into the components?

- If I'm understanding correctly, I can have react render my components on the SERVER, and then send down as part of the request - OR I can have react make requests to the server and render components CLIENT side